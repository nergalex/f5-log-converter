input {
      syslog {
        port => 5044
      }
}
filter {
        grok {
          match => {
            "message" => "app=%{DATA:app};bot_classification=%{DATA:bot_classification};bot_verification_failed=%{DATA:bot_verification_failed};browser_type=%{DATA:browser_type};description=%{DATA:description};environment=%{DATA:environment};gateway=%{DATA:gateway};http.hostname=%{DATA:http.hostname};http.remote_addr=%{DATA:http.remote_addr};http.remote_port=%{DATA:http.remote_port};http.request_method=%{DATA:http.request_method};http.response_code=%{DATA:http.response_code};http.server_addr=%{DATA:http.server_addr};http.server_port=%{DATA:http.server_port};http.uri=%{DATA:http.uri};is_truncated=%{DATA:is_truncated};level=%{DATA:level};policy_name=%{DATA:policy_name};request=%{DATA:request};request_outcome=%{DATA:request_outcome};request_outcome_reason=%{DATA:request_outcome_reason};signature_cves=%{DATA:ignature_cves};signature_ids=%{DATA:signature_ids};signature_names=%{DATA:signature_names};sub_violations=%{DATA:sub_violations};support_id=%{DATA:support_id};type=%{DATA:type};version=%{DATA:version};violation_rating=%{DATA:violation_rating};violations=%{DATA:violations};x_forwarded_for_header_value=%{DATA:x_forwarded_for_header_value};event_host=%{DATA:event_host};event_source=%{DATA:event_source};event_sourcetype=%{DATA:event_sourcetype};event_time=%{DATA:event_time}"
          }
          break_on_match => false
        }
        geoip {
          source => "source_host"
        }
}
output {
        elasticsearch {
          index => "waf-f5xc-%{+YYY.MM.dd}"
          hosts => [ "${ES_HOSTS}" ]
          user => "${ES_USER}"
          password => "${ES_PASSWORD}"
          cacert => '/etc/logstash/certificates/ca.crt'
        }
}
